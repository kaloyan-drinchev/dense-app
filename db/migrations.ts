// This file will be auto-generated by drizzle-kit generate
// For now, we'll create a manual initialization

import { expo_sqlite } from './client';
import { DatabaseVersionManager } from './migrations/version-manager';

export const initializeDatabase = async () => {
  try {
    console.log('üîÑ Initializing database with migrations...');
    
    // Check and run migrations first
    await DatabaseVersionManager.checkAndMigrate();
    
    // Create tables using raw SQL for initial setup
    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS user_profiles (
        id TEXT PRIMARY KEY,
        name TEXT NOT NULL,
        email TEXT,
        age INTEGER,
        weight REAL,
        height REAL,
        goal TEXT,
        created_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        synced_at TEXT
      );
    `);

    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS programs (
        id TEXT PRIMARY KEY,
        title TEXT NOT NULL,
        subtitle TEXT,
        description TEXT,
        duration INTEGER,
        difficulty TEXT,
        type TEXT,
        image TEXT,
        data TEXT,
        created_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        synced_at TEXT
      );
    `);

    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS user_progress (
        id TEXT PRIMARY KEY,
        user_id TEXT NOT NULL,
        program_id TEXT NOT NULL,
        current_week INTEGER DEFAULT 1,
        current_workout INTEGER DEFAULT 1,
        start_date TEXT,
        completed_workouts TEXT,
        weekly_weights TEXT,
        created_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        synced_at TEXT
      );
    `);

    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS daily_logs (
        id TEXT PRIMARY KEY,
        user_id TEXT NOT NULL,
        date TEXT NOT NULL,
        food_entries TEXT,
        total_calories REAL DEFAULT 0,
        total_protein REAL DEFAULT 0,
        total_carbs REAL DEFAULT 0,
        total_fat REAL DEFAULT 0,
        created_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        synced_at TEXT
      );
    `);

    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS custom_meals (
        id TEXT PRIMARY KEY,
        user_id TEXT NOT NULL,
        name TEXT NOT NULL,
        description TEXT,
        ingredients TEXT,
        nutrition TEXT,
        created_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        synced_at TEXT
      );
    `);

    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS user_wizard_results (
        id TEXT PRIMARY KEY,
        user_id TEXT NOT NULL,
        primary_goal TEXT,
        target_weight REAL,
        timeframe TEXT,
        fitness_level TEXT,
        workout_frequency TEXT,
        preferred_workout_length TEXT,
        preferred_workout_types TEXT,
        available_equipment TEXT,
        workout_location TEXT,
        weaknesses TEXT,
        injuries TEXT,
        focus_muscle TEXT,
        suggested_programs TEXT,
        completed_at TEXT DEFAULT (CURRENT_TIMESTAMP),
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP)
      );
    `);

    await expo_sqlite.execAsync(`
      CREATE TABLE IF NOT EXISTS sync_status (
        id TEXT PRIMARY KEY,
        table_name TEXT NOT NULL UNIQUE,
        last_pulled_at TEXT,
        last_pushed_at TEXT,
        updated_at TEXT DEFAULT (CURRENT_TIMESTAMP)
      );
    `);

    console.log('‚úÖ Database initialized successfully with migrations!');
    return true;
  } catch (error) {
    console.error('‚ùå Database initialization error:', error);
    return false;
  }
};